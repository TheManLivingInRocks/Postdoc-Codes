function [OUTPUT1,OUTPUT2,OUTPUT3,OUTPUT4] = MCFS_NPML_Iteration(field_type,Field_Variable_1_present, Field_Variable_1_next,...
                                                                                                                                            Field_Variable_1_x_MCFS_NPML_present,Field_Variable_1_z_MCFS_NPML_present,...
                                                                                                                                            Field_Variable_2_present, Field_Variable_2_next,...
                                                                                                                                            Field_Variable_2_x_MCFS_NPML_present,Field_Variable_2_z_MCFS_NPML_present,...
                                                                                                                                            Field_Variable_3_present, Field_Variable_3_next,Field_Variable_3_x_MCFS_NPML_present,...
                                                                                                                                            Field_Variable_4_present, Field_Variable_4_next,Field_Variable_4_z_MCFS_NPML_present,...
                                                                                                                                            dt,beta_x,beta_z,eta_x,eta_z,alpha_x_PML_optimized,alpha_z_PML_optimized)

    if field_type == "scalar"

            % theta_stage1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*theta_stage1_x_MCFS_NPML_present + ...
            %                                                             (eta_x./2 + 1./dt).*theta_stage1_next + (eta_x./2 - 1./dt).*theta_stage1_present);            
            % theta_stage1_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*theta_stage1_z_MCFS_NPML_present + ...
            %                                                             (eta_z./2 + 1./dt).*theta_stage1_next + (eta_z./2 - 1./dt).*theta_stage1_present);    
        Field_Variable_1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*Field_Variable_1_x_MCFS_NPML_present + ...
                                                                        (eta_x./2 + 1./dt).*Field_Variable_1_next + (eta_x./2 - 1./dt).*Field_Variable_1_present);     
        Field_Variable_1_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*Field_Variable_1_z_MCFS_NPML_present + ...
                                                                        (eta_z./2 + 1./dt).*Field_Variable_1_next + (eta_z./2 - 1./dt).*Field_Variable_1_present);    

        OUTPUT1 = Field_Variable_1_x_MCFS_NPML_next;
        OUTPUT2 = Field_Variable_1_z_MCFS_NPML_next;
        OUTPUT3 = 0;
        OUTPUT4 = 0;

    elseif field_type == "vector"

            % v_x_stage1_x_MCFS_NPML_next_half = MCFS_NPML_First_Order_Iteration("x",v_x_stage1_last_half,v_x_stage1_next_half,...
            %                                                                                                                          dt,beta_x,beta_z,eta_x,eta_z,alpha_x_PML_optimized,alpha_z_PML_optimized,...
            %                                                                                                                          v_x_stage1_x_MCFS_NPML_last_half);
            % v_x_stage1_z_MCFS_NPML_next_half = MCFS_NPML_First_Order_Iteration("z",v_x_stage1_last_half,v_x_stage1_next_half,...
            %                                                                                                                          dt,beta_x,beta_z,eta_x,eta_z,alpha_x_PML_optimized,alpha_z_PML_optimized,...
            %                                                                                                                          v_x_stage1_z_MCFS_NPML_last_half);
            % v_z_stage1_x_MCFS_NPML_next_half = MCFS_NPML_First_Order_Iteration("x",v_z_stage1_last_half,v_z_stage1_next_half,...
            %                                                                                                                          dt,beta_x,beta_z,eta_x,eta_z,alpha_x_PML_optimized,alpha_z_PML_optimized,...
            %                                                                                                                          v_z_stage1_x_MCFS_NPML_last_half);
            % v_z_stage1_z_MCFS_NPML_next_half = MCFS_NPML_First_Order_Iteration("z",v_z_stage1_last_half,v_z_stage1_next_half,...
            %                                                                                                                          dt,beta_x,beta_z,eta_x,eta_z,alpha_x_PML_optimized,alpha_z_PML_optimized,...
            %                                                                                                                          v_z_stage1_z_MCFS_NPML_last_half);

        Field_Variable_1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*Field_Variable_1_x_MCFS_NPML_present + ...
                                                                        (eta_x./2 + 1./dt).*Field_Variable_1_next + (eta_x./2 - 1./dt).*Field_Variable_1_present);     
        Field_Variable_1_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*Field_Variable_1_z_MCFS_NPML_present + ...
                                                                        (eta_z./2 + 1./dt).*Field_Variable_1_next + (eta_z./2 - 1./dt).*Field_Variable_1_present);            
        Field_Variable_2_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*Field_Variable_2_x_MCFS_NPML_present + ...
                                                                        (eta_x./2 + 1./dt).*Field_Variable_2_next + (eta_x./2 - 1./dt).*Field_Variable_2_present);     
        Field_Variable_2_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*Field_Variable_2_z_MCFS_NPML_present + ...
                                                                        (eta_z./2 + 1./dt).*Field_Variable_2_next + (eta_z./2 - 1./dt).*Field_Variable_2_present);    

        OUTPUT1 = Field_Variable_1_x_MCFS_NPML_next;
        OUTPUT2 = Field_Variable_1_z_MCFS_NPML_next;
        OUTPUT3 = Field_Variable_2_x_MCFS_NPML_next;
        OUTPUT4 = Field_Variable_2_z_MCFS_NPML_next;

    elseif field_type == "second-order tensor"

            % T_PK1_xx_stage1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*...
            %                                 ((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*T_PK1_xx_stage1_x_MCFS_NPML_present + ...
            %                                  (eta_x./2 + 1./dt).*T_PK1_xx_stage1_next + (eta_x./2 - 1./dt).*T_PK1_xx_stage1_present); 
            % T_PK1_zz_stage1_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*...
            %                                 ((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*T_PK1_zz_stage1_z_MCFS_NPML_present + ...
            %                                  (eta_z./2 + 1./dt).*T_PK1_zz_stage1_next + (eta_z./2 - 1./dt).*T_PK1_zz_stage1_present);  
            % T_PK1_xz_stage1_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*...
            %                                 ((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*T_PK1_xz_stage1_z_MCFS_NPML_present + ...
            %                                  (eta_z./2 + 1./dt).*T_PK1_xz_stage1_next + (eta_z./2 - 1./dt).*T_PK1_xz_stage1_present);  
            % T_PK1_zx_stage1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*...
            %                                 ((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*T_PK1_zx_stage1_x_MCFS_NPML_present + ...
            %                                  (eta_x./2 + 1./dt).*T_PK1_zx_stage1_next + (eta_x./2 - 1./dt).*T_PK1_zx_stage1_present);  

        Field_Variable_1_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*Field_Variable_1_x_MCFS_NPML_present + ...
                                                                        (eta_x./2 + 1./dt).*Field_Variable_1_next + (eta_x./2 - 1./dt).*Field_Variable_1_present);      
        Field_Variable_2_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*Field_Variable_2_z_MCFS_NPML_present + ...
                                                                        (eta_z./2 + 1./dt).*Field_Variable_2_next + (eta_z./2 - 1./dt).*Field_Variable_2_present);    
        Field_Variable_3_x_MCFS_NPML_next = ((beta_x./dt + (eta_x.*beta_x + alpha_x_PML_optimized)./2)).^(-1).*((beta_x./dt - (eta_x.*beta_x + alpha_x_PML_optimized)./2).*Field_Variable_3_x_MCFS_NPML_present + ...
                                                                        (eta_x./2 + 1./dt).*Field_Variable_3_next + (eta_x./2 - 1./dt).*Field_Variable_3_present);     
        Field_Variable_4_z_MCFS_NPML_next = ((beta_z./dt + (eta_z.*beta_z + alpha_z_PML_optimized)./2)).^(-1).*((beta_z./dt - (eta_z.*beta_z + alpha_z_PML_optimized)./2).*Field_Variable_4_z_MCFS_NPML_present + ...
                                                                        (eta_z./2 + 1./dt).*Field_Variable_4_next + (eta_z./2 - 1./dt).*Field_Variable_4_present);   


        OUTPUT1 = Field_Variable_1_x_MCFS_NPML_next;
        OUTPUT2 = Field_Variable_2_z_MCFS_NPML_next;
        OUTPUT3 = Field_Variable_3_x_MCFS_NPML_next;
        OUTPUT4 = Field_Variable_4_z_MCFS_NPML_next;


    end

end